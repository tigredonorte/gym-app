name: gym

services:
  web:
    build:
      context: .
      dockerfile: ./apps/gym-web-app/Dockerfile
    restart: always
    networks:
      - gym-network

  api:
    build:
      context: .
      dockerfile: ./apps/gym-api/Dockerfile
    healthcheck:
      test: ["CMD", "node", "./scripts/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - mongo-cluster
      - gym-network
    depends_on:
      mongo1:
        condition: service_healthy
    links:
      - mongo1

  mongo1:
    image: mongo:8.0
    hostname: mongo1
    command: --replSet rs0 --bind_ip_all --port 27017
    # command: --replSet rs0 --bind_ip_all --port 27017 --config /etc/mongod.conf
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_ENABLE_REPLICA_SET=${MONGO_ENABLE_REPLICA_SET}
      - MONGO_ALLOW_EXTERNAL_CONNECTIONS=${MONGO_ALLOW_EXTERNAL_CONNECTIONS}
    healthcheck:
      test: ["CMD", "bash", "./mongodb-healthcheck.sh"]
      interval: 60s
      timeout: 10s
      retries: 5
    networks:
      - mongo-cluster
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - mongo1_db:/data/db
      - mongo1_configdb:/data/configdb
      - ./scripts/mongodb-healthcheck.sh:/mongodb-healthcheck.sh
      - ./mongo-keyfile:/data/keyfile
      - ./scripts/mongo/mongod.conf:/etc/mongod.conf
      - ./scripts/mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  # mongo1:
  #   image: mongo:8.0
  #   hostname: mongo1
  #   # command: ["/bin/bash", "/initdb.sh"]
  #   command: --config /etc/mongod.conf
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
  #     - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
  #     - MONGO_DB=${MONGO_DB}
  #     - MONGO_USER=${MONGO_USER}
  #     - MONGO_PASSWORD=${MONGO_PASSWORD}
  #     - MONGO_ENABLE_REPLICA_SET=${MONGO_ENABLE_REPLICA_SET}
  #     - MONGO_ALLOW_EXTERNAL_CONNECTIONS=${MONGO_ALLOW_EXTERNAL_CONNECTIONS}
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "5"
  #   healthcheck:
  #     test: ["CMD-SHELL", "(mongosh --quiet --eval 'db.adminCommand(\"ping\").ok' || exit 1)"]
  #     start_period: 15s
  #     interval: 120s
  #     timeout: 60s
  #     retries: 3
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - mongo-cluster
  #   # restart: no
  #   volumes:
  #     - ./scripts/mongo/functions.sh:/functions.sh
  #     - ./scripts/mongo/mongo-entrypoint.sh:/docker-entrypoint-initdb.d/mongo-entrypoint.sh
  #     # - ./scripts/mongo/healthcheck.sh:/healthcheck.sh
  #     # - ./scripts/mongo/functions.sh:/functions.sh
  #     # - ./scripts/mongo/initdb.sh:/initdb.sh
  #     - ./scripts/mongo/mongo-keyfile:/data/keyfile
  #     - ./scripts/mongo/mongod.conf:/etc/mongod.conf
  #     - mongo1_db:/data/db
  #     - mongo1_configdb:/data/configdb


volumes:
  mongo1_db:
  mongo1_configdb:

networks:
  gym-network:
  mongo-cluster:

configs:
  mongo1_config:
    file: ./scripts/mongo/mongod.conf
