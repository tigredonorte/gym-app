name: gym

services:
  web:
    build:
      context: .
      dockerfile: ./apps/gym-web-app/Dockerfile
    restart: always
    networks:
      - gym-network

  api:
    build:
      context: .
      dockerfile: ./apps/gym-api/Dockerfile
    healthcheck:
      test: ["CMD", "node", "./scripts/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - mongo-cluster
      - gym-network
    depends_on:
      mongo1:
        condition: service_healthy
    links:
      - mongo1

  mongo1:
    build:
      context: .
      dockerfile: ./Dockerfile.mongo
    hostname: mongo1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_ENABLE_REPLICA_SET=${MONGO_ENABLE_REPLICA_SET}
      - MONGO_ALLOW_EXTERNAL_CONNECTIONS=${MONGO_ALLOW_EXTERNAL_CONNECTIONS}
    healthcheck:
      test: ["CMD", "bash", "./healthcheck.sh"]
      interval: 30s
      timeout: 20s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - mongo-cluster
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - mongo1_db:/data/db
      - mongo1_configdb:/data/configdb

volumes:
  mongo1_db:
  mongo1_configdb:

networks:
  gym-network:
  mongo-cluster:
