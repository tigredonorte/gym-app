name: gym

services:
  nginx:
    build:
      context: .
      dockerfile: ./infra/nginx/Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - web
      - workers
    networks:
      - gym-network

  web:
    build:
      context: .
      dockerfile: ./apps/gym-web-app/Dockerfile
    restart: always
    networks:
      - gym-network
    expose:
      - "80"

  api:
    build:
      context: .
      dockerfile: ./apps/gym-api/Dockerfile
    healthcheck:
      test: ["CMD", "node", "./infra/api/healthcheck.js"]
      interval: 300s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - mongo-cluster
      - gym-network
    depends_on:
      - mongo1
    links:
      - mongo1
    expose:
      - "3000"
      - "5000"

  workers:
    build:
      context: .
      dockerfile: ./apps/workers/Dockerfile
    healthcheck:
      test: ["CMD", "node", "./infra/workers/healthcheck.js"]
      interval: 300s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - gym-network
    depends_on:
      redis:
        condition: service_healthy
    expose:
      - "3333"

  redis:
    image: redis:latest
    ports:
      # - "6379:6379"
      - "6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - gym-network

  mongo1:
    build:
      context: .
      dockerfile: ./infra/mongo/Dockerfile.mongo
    hostname: mongo1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_ENABLE_REPLICA_SET=${MONGO_ENABLE_REPLICA_SET}
      - MONGO_ALLOW_EXTERNAL_CONNECTIONS=${MONGO_ALLOW_EXTERNAL_CONNECTIONS}
    healthcheck:
      test: ["CMD", "bash", "./healthcheck.sh"]
      interval: 30s
      timeout: 20s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - mongo-cluster
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - mongo1_db:/data/db
      - mongo1_configdb:/data/configdb

volumes:
  redis-data:
    driver: local
  mongo1_db:
  mongo1_configdb:

networks:
  gym-network:
  mongo-cluster:

configs:
  nginx-config:
    file: ./nginx/nginx.conf